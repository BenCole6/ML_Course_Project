"0","classif_task <- makeClassifTask(id = ""target_binned"","
"0","                                data = advertising_train_transformed,"
"0","                                target = ""norm_ln_y_binned"")"
"2","Provided data is not a pure data.frame but from class spec_tbl_df, hence it will be converted."
"0","rf_lrn <- makeLearner(""classif.randomForest"","
"0","                      predict.type = ""response"","
"0","                      fix.factors.prediction = T)"
"0","wrapped_lrn_rf <- makeBaggingWrapper(rf_lrn,"
"0","                                     bw.iters = 10,"
"0","                                     bw.feats = 0.2)"
"0","wrappedRf_model <- mlr::train(wrapped_lrn_rf,"
"0","                              classif_task)"
"0","wrappedRf_model"
"1","Model for learner.id=classif.randomForest.bagged; learner.class=BaggingWrapper"
"1","
"
"1","Bagged Learner: classif.randomForest"
"1","
"
"1","Trained on: task.id = target_binned; obs = 1928; features = 25"
"1","
"
"1","Hyperparameters: bw.iters=10,bw.feats=0.2"
"1","
"
"0","RF_prediction <- predict(wrappedRf_model,"
"0","                         newdata = advertising_train)"
"2","Provided data for prediction is not a pure data.frame but from class spec_tbl_df, hence it will be converted."
"0","kable_styling(kable(sample_n(RF_prediction$data,"
"0","                             size = 10),"
"0","                    caption = ""Prediction Truth and Response for Random Forest Model""),"
"0","              font_size = 10, bootstrap_options = c(""striped""),"
"0","              full_width = F)"
