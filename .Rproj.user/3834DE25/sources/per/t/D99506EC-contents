---
title:  |
        | Determining Skater's Plus Minus
        | Using key Statistics
        subtitle: |
        | MATH2319 - Machine Learning
        | Course Project
        author: "Ben Cole - s3412349"
date: "Print Date: `r format(Sys.Date(), '%d/%m/%Y')`"
output:
  pdf_document:
    toc: true
    toc_depth: 3
    number_sections: true
    latex_engine: xelatex
mainfont: Arial Nova
fontsize: 12pt
geometry: margin=15mm
---

\newpage

# **Phase 1 - Introduction, Cleaning, and Exploration**

## Introduction

Sports statistics is an area where many data points are collected that contribute to a wide range of statistics. Primarily, two main objectives arise for the use of these statistics; to either predict a result of a given match or to quantify the performance of a given participant. One such sport where a large amount of data is collected is the National Hockey League (here on **NHL**) in North America. Game statistics are collected for both skaters and goaltenders for a range of performance indicators ranging from hits/body checks to face-off wins to short-handed goals for and against. However, not all of these statistics are easily compared across players from differing positions. Comparing goals blocked between a defensemen and a left wing is unfair, whilst comparing penalty minutes may be a more accurate comparison to see which skaters are costing the team. Points are simply a tally of the goals and assists generated by a skater, and so may be weighted towards the attacking lines. As such, it would seem that Plus/Minus (or **+/-**) is one of the simplest ways to compare all skaters, regardless of their playing position.    

Plus/Minus is an overall measure of the number of goals scored by a skater's team they are on the ice minus the number of goals scored against the skater's team while they are on the ice. The formula used to calculate Plus/Minus for a given skater is given by:

$$ PM_s = \sum_{s=1}^{t}{(GF_{t,s} - GA_{t,s})} $$
- $s =$ given skater
- $t =$ teams in which skater $s$ played
- $GF=$ goals for team $t$ while skater $s$ was on the ice
- $GA=$ goals against team $t$ while skater $s$ was on the ice

###

```{r}

library(pacman)                         ## for loading multiple packages

suppressMessages(p_load(character.only = T,
                        install = F,
                        c("tidyverse",  ## thanks Hadley
                          "lubridate",  ## for handling dates
                          "forcats",    ## for categorial variables, not for felines
                          "zoo",        ## some data cleaning capabilities
                          "lemon",      ## add ons for ggplot
                          "rvest",      ## scraping web pages
                          "knitr",      ## knitting to RMarkdown
                          "kableExtra", ## add ons for knitr tables
                          "scales",     ## quick and easy formatting prettynums
                          "grid",       ## for stacking ggplots
                          "gridExtra",  ## also for stacking ggplots
                          "e1071",      ## for skew and kurtosis
                          "janitor",    ## cleaning colnames
                          "beepr")))    ## plays a beep tone


```

# Loading and Quick Cleaning

```{r}

Skater_Stats <- read_csv(file.path(getwd(),
                                   "skater_stats.csv"))

Skater_Stats <- select(Skater_Stats,
                       -X1)

Skater_Stats <- rename(Skater_Stats,
                       "PM" = `+/-`,
                       "S_Pc" = `S%`,
                       "FO_Pc" = `FO%`)

Skater_Stats[, c(7:length(colnames(Skater_Stats)))] <- mutate_all(Skater_Stats[, c(7:length(colnames(Skater_Stats)))],
                                                                  as.double)

```


### Autocorrelation of Doubles

```{r, fig.height=9, fig.width=10}

Skater_double <- Skater_Stats[, c(3, 6:length(colnames(Skater_Stats)))]

for (i in colnames(Skater_double)) {
  
  print(acf(Skater_double,
            na.action = na.pass,
            lag.max = nrow(Skater_double),
            main = colnames(Skater_double[, i]),
            ylab = "Autocorrelation",
            xlab = "Lag Position"))
  
}

```

## References

* <http://inalitic.com/datasets/nhl%20player%20data.html>