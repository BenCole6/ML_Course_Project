value = "Value")
advertising_train_trans
gather(advertising_train_trans,
sqrt_price1, euler_price1, minmax_price1,
sqrt_price2, euler_price2, minmax_price2,
sqrt_price3, euler_price3, minmax_price3,
key = "Transformation",
value = "Value")
gather(select(advertising_train_trans,
sqrt_price1, euler_price1, minmax_price1,
sqrt_price2, euler_price2, minmax_price2,
sqrt_price3, euler_price3, minmax_price3),
sqrt_price1, euler_price1, minmax_price1,
sqrt_price2, euler_price2, minmax_price2,
sqrt_price3, euler_price3, minmax_price3,
key = "Transformation",
value = "Value")
ggplot(advertising_train_trans) +
geom_density(aes(x = price1),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = sqrt_price1),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = euler_price1),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = minmax_price1),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = minmax_price1),
fill = "yellow",
alpha = 1/3) +
scale_y_log10() +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = minmax_price1),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = sqrt_price2),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = euler_price2),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = minmax_price2),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = sqrt_price3),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = euler_price3),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = minmax_price3),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
advertising_train_trans <- mutate(advertising_train,
"sqrt_price1"= sqrt(price1),
"euler_price1" = exp(price1),
"minmax_price1" = ((price1 - min(price1))/
(max(price1) - min(price1))),
"std_price1" = (price1 - mean(price1))/sd(price1),
"sqrt_price2"= sqrt(price2),
"euler_price2" = exp(price2),
"minmax_price2" = ((price2 - min(price2))/
(max(price2) - min(price2))),
"std_price2" = (price2 - mean(price2))/sd(price2),
"sqrt_price3"= sqrt(price3),
"euler_price3" = exp(price3),
"minmax_price3" = ((price3 - min(price3))/
(max(price3) - min(price3))),
"std_price3" = (price3 - mean(price3))/sd(price3))
ggplot(advertising_train_trans) +
geom_density(aes(x = std_price1),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = std_price2),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_trans) +
geom_density(aes(x = std_price3),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train) +
geom_density(aes(x = price3),
fill = "yellow",
alpha = 1/3) +
theme_minimal() +
scale_x_log10() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
advertising_trim <- filter(advertising_train,
price1 < 2*sd(price1),
price2 < 2*sd(price2),
price3 < 2*sd(price3))
advertising_trim
nrow(advertising_train) - nrow(advertising_trim)
ggplot(advertising_trim) +
geom_density(aes(x = price1),
fill = "yellow",
alpha = 1/3) +
scale_x_log10(labels = comma_format(accuracy = 0.1)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
```{r}
advertising_trim <- filter(advertising_train,
price1 < 2*sd(price1),
price2 < 2*sd(price2),
price3 < 2*sd(price3))
advertising_trim <- filter(advertising_train,
price1 < 2*sd(price1),
price2 < 2*sd(price2),
price3 < 2*sd(price3))
ggplot(advertising_trim) +
geom_density(aes(x = price1),
fill = "yellow",
alpha = 1/3) +
scale_x_log10(labels = comma_format(accuracy = 0.1)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_trim) +
geom_density(aes(x = price2),
fill = "yellow",
alpha = 1/3) +
scale_x_log10(labels = comma_format(accuracy = 0.1)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
advertising_trim <- filter(advertising_train,
price1 < 2*sd(price1),
price2 < 2*sd(price2),
price3 < 2*sd(price3))
ggplot(advertising_trim) +
geom_density(aes(x = price1),
fill = "yellow",
alpha = 1/3) +
scale_x_log10(labels = comma_format(accuracy = 0.1)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_trim) +
geom_density(aes(x = price2),
fill = "yellow",
alpha = 1/3) +
scale_x_log10(labels = comma_format(accuracy = 0.1)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_trim) +
geom_density(aes(x = price3),
fill = "yellow",
alpha = 1/3) +
scale_x_log10(labels = comma_format(accuracy = 0.1)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
rm(list = ls())
gc()
library(pacman)                         ## for loading multiple packages
suppressMessages(p_load(character.only = T,
install = F,
c("tidyverse",  ## thanks Hadley
"lubridate",  ## for handling dates
"forcats",    ## for categorial variables, not for felines
"zoo",        ## some data cleaning capabilities
"lemon",      ## add ons for ggplot
"rvest",      ## scraping web pages
"knitr",      ## knitting to RMarkdown
"kableExtra", ## add ons for knitr tables
"scales",     ## quick and easy formatting prettynums
"grid",       ## for stacking ggplots
"gridExtra",  ## also for stacking ggplots
"e1071",      ## for skew and kurtosis
"janitor",    ## cleaning colnames
"beepr")))    ## plays a beep tone
advertising_train <- read_csv("advertising_train.csv")
sample_adv <- sample_n(advertising_train, 20)
kable_styling(kable(sample_adv[ , 1:(ncol(sample_adv)/2)],
caption = "Sample of Advertising Data Frame"),
font_size = 8.5, latex_options = c("striped"),
full_width = F)
kable_styling(kable(sample_adv[ , c(1, ((ncol(sample_adv)/2)+1):ncol(sample_adv))],
caption = "Sample of Advertising Data Frame (cont)"),
font_size = 8.5, latex_options = c("striped"),
full_width = F)
advertising_train$companyId <- as.factor(advertising_train$companyId)
advertising_train$countryId <- as.factor(advertising_train$countryId)
advertising_train$deviceType <- as.factor(advertising_train$deviceType)
advertising_train$dow <- as.factor(advertising_train$dow)
sapply(advertising_train, class)
advertising_train_long_num <- select(advertising_train,
colnames(advertising_train),
-case_id, -countryId,
-companyId, -deviceType,
-dow)
advertising_train_long_num <- gather(advertising_train_long_num,
key = "Variable",
value = "Value")
summary_adv_num <- summarise(group_by(advertising_train_long_num,
Variable),
"Mean" = mean(Value, na.rm = T),
"Std Dev" = sd(Value, na.rm = T),
"Min" = min(Value, na.rm = T),
"Q1" = quantile(Value, 0.25, na.rm = T),
"Median" = median(Value, na.rm = T),
"Q3" = quantile(Value, 0.75, na.rm = T),
"Max" = max(Value, na.rm = T),
"Number of NA" = sum(is.na(Value)))
kable_styling(kable(summary_adv_num,
digits = 3, format.args = list(nsmall = 3,
scientific = F,
big.mark = ","),
caption = "Summary Statistics of Numeric Variables"),
font_size = 8.5, latex_options = c("striped"),
full_width = F)
advertising_train_long_cat <- select(advertising_train,
countryId,
companyId, deviceType,
dow)
advertising_train_long_cat <- gather(advertising_train_long_cat,
key = "Variable",
value = "Value")
advertising_train_long_cat$Variable <- as.factor(advertising_train_long_cat$Variable)
advertising_train_long_cat$Value <- as.factor(advertising_train_long_cat$Value)
ggplot(advertising_train_long_cat) +
geom_bar(aes(x = fct_infreq(Value),
fill = Variable),
show.legend = F) +
facet_rep_wrap(~Variable,
repeat.tick.labels = T,
scales = "free") +
scale_y_continuous(labels = comma,
expand = c(0.01, 0),
"Count") +
scale_x_discrete("Factor Value") +
scale_fill_manual(values = c("blue4", "red3", "cyan3", "yellow3")) +
labs(title = "Frequencies of each Value for each Categorical Variable") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
country_labels <- levels(fct_infreq(advertising_train$countryId))[c(seq(1,
length(levels(fct_infreq(advertising_train$countryId))),
ceiling(length(levels(fct_infreq(advertising_train$countryId)))/10)))]
ggplot(advertising_train) +
geom_bar(aes(x = fct_infreq(countryId)),
fill = "red3") +
scale_y_continuous(labels = comma,
expand = c(0.01, 0),
"Count") +
scale_x_discrete(breaks = country_labels,
"countryId") +
labs(title = "Frequency of observations for each countryId",
subtitle = "(a categorical variable)") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(advertising_train_long_num) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Variable,
repeat.tick.labels = T,
scales = "free",
ncol = 3) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
ggplot(advertising_train_long_num) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Variable,
repeat.tick.labels = T,
scales = "free",
ncol = 3) +
scale_x_log10(labels = comma_format(accuracy = 0.1)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_rect(fill = "aliceblue",
colour = NA))
advertising_train <- mutate(advertising_train,
"ln_cpc" = log(cpc),
"ln_ctr" = log(ctr),
"ln_impr" = log(impression),
"ln_y" = log(y))
(x - min(x)) /
(max(x) - min(x)) *(1-1) +1
normalise <- function(x) {
(x - min(x)) /
(max(x) - min(x)) *(1-1) +1
}
normalise(advertising_train$price1)
normalise <- function(x) {
(x - min(x)) /
(max(x) - min(x)) *(99 - 0) +0
}
normalise(advertising_train$price1)
price_normal <- mutate(advertising_train,
norm_price1 = normalise(price1),
norm_price2 = normalise(price2),
norm_price3 = normalise(price3))
normal_price_long <- gather(price_normal,
norm_price1, norm_price2,
norm_price3,
key = "Normalisation",
value = "Value")
ggplot(normal_price_long) +
geom_density(aes(x = Value)) +
facet_rep_wrap(~Normalisation) +
theme_minimal()
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Normalisation) +
theme_minimal()
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3,
ncol = 1) +
facet_rep_wrap(~Normalisation) +
theme_minimal()
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Normalisation,
ncol = 1) +
theme_minimal()
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Normalisation) +
theme_minimal()
normalise <- function(x) {
(x - min(x)) /
(max(x) - min(x)) *(10 - 0) +0
}
normalise(advertising_train$price1)
normalise <- function(x) {
(x - min(x)) /
(max(x) - min(x)) *(10 - 0) +0
}
price_normal <- mutate(advertising_train,
norm_price1 = normalise(price1),
norm_price2 = normalise(price2),
norm_price3 = normalise(price3))
normal_price_long <- gather(price_normal,
norm_price1, norm_price2,
norm_price3,
key = "Normalisation",
value = "Value")
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Normalisation) +
theme_minimal()
normalise <- function(x) {
(x - min(x)) /
(max(x) - min(x)) *(10 - 0) +0
}
standardise <- function(x) {
(x - mean(x)) /
sd(x)
}
price_normal <- mutate(advertising_train,
norm_price1 = normalise(price1),
norm_price2 = normalise(price2),
norm_price3 = normalise(price3),
std_price1 = standardise(price1),
std_price2 = standardise(price2),
std_price3 = standardise(price3))
normal_price_long <- gather(price_normal,
norm_price1, norm_price2, norm_price3,
std_price1, std_price2, std_price3,
key = "Normalisation",
value = "Value")
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Normalisation) +
theme_minimal()
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Normalisation,
ncol = 3,
scales = "free") +
theme_minimal()
ggplot(normal_price_long) +
geom_density(aes(x = Value),
fill = "yellow",
alpha = 1/3) +
facet_rep_wrap(~Normalisation,
ncol = 3,
scales = "free",
repeat.tick.labels = T) +
theme_minimal()
rm(list=ls())
gc()
