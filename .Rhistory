"Q1 PM" = quantile(PM, 0.25, na.rm = T),
"Median PM" = median(PM, na.rm = T),
"Q3 PM" = quantile(PM, 0.75, na.rm = T),
"Max PM" = max(PM, na.rm = T)))),
latex_options = "striped", font_size = 9, position = "center")
Skater_Stats_Long <- gather(Skater_Stats,
c(Age, GP:PTS, PIM:FO_percent),
key = "Variable",
value = "Statistic")
kable_styling(kable(summarise(group_by(Skater_Stats_Long,
Variable),
"Mean" = mean(Statistic, na.rm = T),
"Std Dev" = sd(Statistic, na.rm = T),
"Min" = min(Statistic, na.rm = T),
"Q1" = quantile(Statistic, 0.25, na.rm = T),
"Median" = median(Statistic, na.rm = T),
"Q3" = quantile(Statistic, 0.75, na.rm = T),
"Max" = max(Statistic, na.rm = T)),
digits = 2,
format.args = list(scientific = F, big.mark = ",", nsmall = 2)),
latex_options = "striped", font_size = 10, full_width = F)
column_spec(kable_styling(kable(Variables, row.names = F,
caption = "Variable descriptions as provided by Inalitic"),
latex_options = c("striped"), full_width = F),
4, width = "12.5cm")
kable_styling(kable(t(summarise(Skater_Stats,
"Mean PM" = mean(PM, na.rm = T),
"Std Dev PM" = sd(PM, na.rm = T),
"Min PM" = min(PM, na.rm = T),
"Q1 PM" = quantile(PM, 0.25, na.rm = T),
"Median PM" = median(PM, na.rm = T),
"Q3 PM" = quantile(PM, 0.75, na.rm = T),
"Max PM" = max(PM, na.rm = T))),
caption = "Descriptive Statistics for Target Feature PM
(Plus/Minus)",
format.args = list(nsmall = 2, scientific = F)),
latex_options = "striped", font_size = 9, position = "center")
kable_styling(kable(t(summarise(Skater_Stats,
"Mean PM" = mean(PM, na.rm = T),
"Std Dev PM" = sd(PM, na.rm = T),
"Min PM" = min(PM, na.rm = T),
"Q1 PM" = quantile(PM, 0.25, na.rm = T),
"Median PM" = median(PM, na.rm = T),
"Q3 PM" = quantile(PM, 0.75, na.rm = T),
"Max PM" = max(PM, na.rm = T))),
caption = "Descriptive Statistics for Target Feature PM
(Plus/Minus)",
digits = 2,
format.args = list(nsmall = 2, scientific = F)),
latex_options = "striped", font_size = 9, position = "center")
kable_styling(kable(t(summarise(Skater_Stats,
"Mean PM" = mean(PM, na.rm = T),
"Std Dev PM" = sd(PM, na.rm = T),
"Min PM" = min(PM, na.rm = T),
"Q1 PM" = quantile(PM, 0.25, na.rm = T),
"Median PM" = median(PM, na.rm = T),
"Q3 PM" = quantile(PM, 0.75, na.rm = T),
"Max PM" = max(PM, na.rm = T))),
caption = "Descriptive Statistics for Target Feature PM
(Plus/Minus)",
digits = 3,
format.args = list(nsmall = 2, scientific = F)),
latex_options = "striped", font_size = 9, position = "center")
kable_styling(kable(t(summarise(Skater_Stats,
"Mean PM" = mean(PM, na.rm = T),
"Std Dev PM" = sd(PM, na.rm = T),
"Min PM" = min(PM, na.rm = T),
"Q1 PM" = quantile(PM, 0.25, na.rm = T),
"Median PM" = median(PM, na.rm = T),
"Q3 PM" = quantile(PM, 0.75, na.rm = T),
"Max PM" = max(PM, na.rm = T))),
caption = "Descriptive Statistics for Target Feature PM
(Plus/Minus)",
digits = 3),
latex_options = "striped", font_size = 9, position = "center")
runif(1,10)
runif(min = 1, max = 10)
sample(colnames(Skater_Stats),
n = 3)
sample(colnames(Skater_Stats),
size = 3)
sample(colnames(Skater_Stats),
size = 3)
sample(colnames(Skater_Stats),
size = 3)
Density_Vars <- c("PM", sample(colnames(Skater_Stats),
size = 5))
Density_Vars
Density_Vars
Density_Vars <- c("PM", sample(colnames(select_if(Skater_Stats,
is.numeric)),
size = 5))
Density_Vars
Skater_Stats
Skater_Stats[ , str_detect(Skater_Stats, "percent")]
Skater_Stats[ , c("S_percent", "FO_percent")]
Skater_Stats[ , c("S_percent", "FO_percent")]/100
Skater_Stats[ , c("S_percent", "FO_percent")] <- Skater_Stats[ , c("S_percent", "FO_percent")]/100
sample_n(Skater_Stats, 20)
kable_styling(kable(sample_n(Skater_Stats, 20)),
latex_options = c("striped", "scale_down"))
kable_styling(kable(sample_n(Skater_Stats, 20),
caption = "Sample of `Skater_Stats` data frame"),
latex_options = c("striped", "scale_down"))
kable_styling(kable(sample_n(Skater_Stats, 20),
caption = "Sample of \\\`Skater_Stats\\\` data frame"),
latex_options = c("striped", "scale_down"))
Skater_Sample <- sample_n(Skater_Stats, 20)
ncol(Skater_Sample)
Skater_Stats_Long
for (i in Density_Vars) {
plot_df <- select(Skater_Stats_Long,
Variable = i)
print(head(plot_df))
ggplot()
}
plot_df <- select(Skater_Stats,
Variable = i)
for (i in Density_Vars) {
plot_df <- select(Skater_Stats,
Variable = i)
print(head(plot_df))
ggplot()
}
ggplot(Skater_Stats) +
geom_density(aes(x = i))
Skater_Stats
ggplot(Skater_Stats) +
geom_density(aes(y = i))
ggplot(Skater_Stats) +
geom_density(aes(i))
for (i in Density_Vars) {
ggplot(Skater_Stats) +
geom_density(aes(x = i))
}
Density_Vars <- c("PM", sample(colnames(select_if(Skater_Stats,
is.numeric)),
size = 5))
for (i in Density_Vars) {
print(ggplot(Skater_Stats) +
geom_density(aes(x = i)))
}
ggplot(Skater_Stats) +
geom_density(aes(x = PM))
ggplot(Skater_Stats) +
geom_density(aes(x = PM), na.rm = T)
for (i in Density_Vars) {
print(Density_Vars)
print(ggplot(Skater_Stats) +
geom_density(aes(x = i)))
}
for (i in Density_Vars) {
print(i)
print(ggplot(Skater_Stats) +
geom_density(aes(x = i)))
}
Density_Vars <- c("PM", "PTS",
sample(colnames(select_if(Skater_Stats,
is.numeric)),
size = 4))
Density_Vars
print(char(i))
Density_Vars <- c("PM", "PTS",
sample(colnames(select_if(Skater_Stats,
is.numeric)),
size = 4))
for (i in Density_Vars) {
print(as.name(i))
print(ggplot(Skater_Stats) +
geom_density(aes(x = i)))
}
ggplot(Skater_Stats) +
geom_density(aes(x = PM), na.rm = T)
Density_Vars <- c("PM", "PTS",
sample(colnames(select_if(Skater_Stats,
is.numeric)),
size = 4))
for (i in Density_Vars) {
print(as.name(i))
print(ggplot(Skater_Stats) +
geom_density(aes(x = as.name(i)))
}
Density_Vars <- c("PM", "PTS",
sample(colnames(select_if(Skater_Stats,
is.numeric)),
size = 4))
for (i in Density_Vars) {
print(as.name(i))
print(ggplot(Skater_Stats) +
geom_density(aes(x = as.name(i))))
}
as.name(i)
print(ggplot(Skater_Stats) +
geom_density(aes(x = as.name(i))))
print(ggplot(Skater_Stats) +
geom_density(aes(x = as.name(char(i)))))
?char
print(ggplot(Skater_Stats) +
geom_density(aes(x = noquote(i))))
Var <- as.name(i)
Var
geom_density(aes(x = Var)
print(ggplot(Skater_Stats) +
print(ggplot(Skater_Stats) +
geom_density(aes(x = Var)))
Density_Vars <- c("PM", "PTS",
sample(colnames(select_if(Skater_Stats,
is.numeric)),
size = 4))
for (i in Density_Vars) {
Var <- as.name(i)
print(ggplot(Skater_Stats) +
geom_density(aes(x = Var)))
}
ggplot(Skater_Stats) +
geom_density(aes(x = Var))
Skater_Stats$Var
Var
ggplot(Skater_Stats) +
geom_density(aes(x = i))
ggplot(Skater_Stats) +
geom_density(aes(x = as.name(x)))
density_plot <- function(x) {
ggplot(Skater_Stats) +
geom_density(aes(x = as.name(x)))
}
lapply(Density_Vars, density_plot)
lapply(names(Skater_Stats), density_plot)
lapply(names(Skater_Stats[6:9]), density_plot)
Skater_Stats_Long
ggplot(Skater_Stats_Long) +
geom_density(Statistic) +
facet_rep_wrap(~Variable)
Skater_Stats_Long
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic)) +
facet_rep_wrap(~Variable)
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic), na.rm = T) +
facet_rep_wrap(~Variable)
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic), na.rm = T) +
facet_rep_wrap(~Variable, scales = "free")
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic), na.rm = T,
fill = "yellow", alpha = 0.8) +
facet_rep_wrap(~Variable, scales = "free") +
scale_
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic), na.rm = T,
fill = "yellow", alpha = 0.8) +
facet_rep_wrap(~Variable, scales = "free") +
scale_x_continuous(labels = comma)
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic), na.rm = T,
fill = "yellow", alpha = 0.2) +
facet_rep_wrap(~Variable, scales = "free") +
scale_x_continuous(labels = comma)
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic), na.rm = T,
fill = "yellow", alpha = 0.2) +
facet_rep_wrap(~Variable, scales = "free") +
scale_x_continuous(labels = comma) +
theme_minimal()
ggplot(Skater_Stats_Long) +
geom_density(aes(x = Statistic), na.rm = T,
fill = "yellow", alpha = 0.2) +
facet_rep_wrap(~Variable, scales = "free") +
scale_x_continuous(labels = comma) +
theme_minimal()
Skater_Stats
select_if(Skater_Stats, !is.numeric)
select_if(Skater_Stats, -is.numeric)
select_if(Skater_Stats, !is.numeric)
select_if(Skater_Stats, is.numeric)
-select_if(Skater_Stats, is.numeric)
!select_if(Skater_Stats, is.numeric)
select_if(Skater_Stats, is.character)
Skater_Stats
ggplot(Skater_Stats) +
geom_bar(aes(x = Tm))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infeq(Tm)))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)))
Skater_Stats
ggplot(Skater_Stats) +
geom_bar(aes(x = infreq(Pos)))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos)))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm))) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position")
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm))) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Team")
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm))) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Team") +
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos))) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position")
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm))) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos))) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position")
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "cyan2", alpha = 0.4) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos)),
fill = "turquoise2", alpha = 0.4) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position")
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "cyan", alpha = 0.6) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos)),
fill = "turquoise", alpha = 0.6) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position")
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position") +
theme_minimal()
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank())
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank())
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = elemen_blank(),
text = element_text(size = 8))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
text = element_text(size = 8))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Team",
expand = expand_scale(c(0,0))) +
labs("Frequencies of each Team") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
text = element_text(size = 8))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency",
expand = expand_scale(c(0,0))) +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
text = element_text(size = 8))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency") +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
text = element_text(size = 8))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Tm)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency",
expand = expand_scale(c(0,0))) +
scale_x_discrete("Team") +
labs("Frequencies of each Team") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
text = element_text(size = 8))
ggplot(Skater_Stats) +
geom_bar(aes(x = fct_infreq(Pos)),
fill = "turquoise", alpha = 2/3) +
scale_y_continuous(labels = comma,
"Frequency",
expand = expand_scale(c(0,0))) +
scale_x_discrete("Position") +
labs("Frequencies of each Skating Position") +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
text = element_text(size = 8))
View(filter(Skater_Stats, Tm = "TOT"))
View(filter(Skater_Stats, Tm == "TOT"))
View(arrange(filter(Skater_Stats, Tm == "TOT"), TOT))
View(arrange(filter(Skater_Stats, Tm == "TOT"), Tm))
View(arrange(filter(Skater_Stats, Tm == "TOT"), Player))
View(arrange(filter(Skater_Stats, Tm == "TOT"), Player, Season))
View(arrange(filter(Skater_Stats, Player == "Ab DeMarco"), Season))
summarise(group_by(Skater_Stats,
Tm),
"First Season" = min(Season))
arrange(summarise(group_by(Skater_Stats,
Tm),
"First Season" = min(Season)),
`First Season)
arrange(summarise(group_by(Skater_Stats,
Tm),
"First Season" = min(Season)),
`First Season`)
arrange(summarise(group_by(Skater_Stats,
Tm),
"First Season" = min(Season)),
`First Season`)
arrange(summarise(group_by(Skater_Stats,
Tm),
"First Season in Data Set" = min(Season)),
`First Season in Data Set`)
